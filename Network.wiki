= Network commands =

== Check if a port is Open ==
nc -vz <ip> <port>
nmap -p <port> <ip>


=== UDP ===
nc -vz -u <ip> <port>
nmap -sU -p <port> <ip>

== Get Interface and IP to be used to reach an IP ==
ip route get <IP>

== Get IPs of all connected devices on LAN ==
sudo arp-scan --interface=<your_Interface> --localnet

, or
nmap -sP 192.168.1.0/24

== IPv6 disable == 
sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1
sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1
sudo sysctl -w net.ipv6.conf.lo.disable_ipv6=1

== ping, flood ping ==
sudo ping -f -i 3 www.google.com      #specify interval between requests 

== ping, limit TTL ==
ping -t 10 www.google.com

== SSH Tunnel ==
=== Accessing from port 8044 in a remote server to 80 in a LAN ===
ssh -f -N user@server.net -p 22 -i .ssh/key -R 8044:127.0.0.1:80 -vvv

=== SOCKS Proxy through SSH Tunnel ===
ssh -ND 1080 user@ip
open -a Google\ Chrome --args --proxy-server="socks5://localhost:1080"

=== Other docs ===
ssh -f user@personal-server.com -L 2000:personal-server.com:25 -N

The -f tells ssh to go into the background just before it executes the command. This is followed by the username and server you are logging into. The -L 2000:personal-server.com:25 is in the form of -L local-port:host:remote-port. Finally the -N instructs OpenSSH to not execute a command on the remote system.

This essentially forwards the local port 2000 to port 25 on personal-server.com over, with nice benefit of being encrypted. I then simply point my E-mail client to use localhost:2000 as the SMTP server and we're off to the race

== [[Tcpdump]] ==
== Telnet, Making HTTP Requests ==
telnet <host> <port>
GET / HTTP/1.1
Host: <host>
